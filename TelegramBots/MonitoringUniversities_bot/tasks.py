import database
import monitoring


async def auto_monitoring(bot, time: str):
    users = await database.start_auto_monitoring(time)
    
    for user in users:
        await bot.send_message(user.chat_id, "üìå –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∏–π –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥: ")
        for university in user.universities.split(','):
            un = await monitoring.process_un(university, user.k_bal)
            await bot.send_message(user.chat_id, f"\
{un.name}({un.url}): \n–í—Å—å–æ–≥–æ {un.k_higher} \
–∞–±—ñ—Ç—É—Ä—ñ—î–Ω—Ç—ñ–≤ —ñ–∑ {un.k_all} –º–∞—é—Ç—å –∫–æ–Ω–∫—É—Ä—Å–Ω–∏–π –±–∞–ª –≤–∏—â–µ \
–∞–±–æ —Ä—ñ–≤–Ω–∏–π {user.k_bal}, —Å–µ—Ä–µ–¥ –Ω–∏—Ö: {un.k_kv} —ñ–∑ –∫–≤–æ—Ç–æ—é —Ç–∞ {un.k_k} –Ω–∞ –∫–æ–Ω—Ç—Ä–∞–∫—Ç"
)

            if user.result_view == 'with_list':
                await bot.send_message(user.chat_id, "\
‚Ññ –ü—Ä–∏–∑–≤—ñ—â–µ —Ç–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª–∏ | –ü—Ä—ñ–æ—Ä—ñ—Ç–µ—Ç | –ö–æ–Ω–∫—É—Ä—Å–Ω–∏–π –±–∞–ª | –ö–≤–æ—Ç–∞(+/-) | –ë—é–¥–∂–µ—Ç(–ë)/–ö–æ–Ω—Ç—Ä–∞–∫—Ç(–ö)\
")
                result_list = ""
                for index, entrant in enumerate(un.entrants):
                    result_list += f"\
{index + 1}. {entrant.full_name} | {entrant.priority} | {entrant.k_bal} | {entrant.kvota} | {entrant.b_or_k}\n\
"
                    if (index + 1) % 50 == 0:
                        await bot.send_message(user.chat_id, result_list)
                        result_list = ""
                await bot.send_message(user.chat_id, result_list)
